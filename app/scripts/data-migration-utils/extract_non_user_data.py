#!/usr/bin/env python
import json
import sys

# This utility reads, from STDIN, a JSON file of the format generated by
# "manage.py dumpdata timetables" and then it filters out data relating to
# users (students and admins), leaving only pure timetable data.
# The output can then be used by "manage.py loaddata" to populate another
# instance of Timetable.

input = json.load(sys.stdin)

firstpass = []
userpks = []

for obj in input:
    # omit all thinglock objects, these are records of edit locks
    if obj["model"] == "timetables.thinglock":
        continue
    # omit all thingtag objects that signify edit rights
    if obj["model"] == "timetables.thingtag" and \
            obj["fields"]["annotation"] == "admin":
        continue
    # omit all thing objects that represent users
    # and while we're at it, collect up their primary keys as
    # we'll need them later
    if obj["model"] == "timetables.thing" and \
            obj["fields"]["fullpath"][0:5] == "user/":
        userpks.append(obj["pk"])
        continue
    firstpass.append(obj)


def isNotStudentData(obj):
    # omit all eventsourcetag objects that represent a student's timetable
    return not(obj["model"] == "timetables.eventsourcetag" and
               obj["fields"]["thing"] in userpks)

output = filter(isNotStudentData, firstpass)

json.dump(output, sys.stdout, sort_keys=True, indent=4)
print  # ensure output ends with a newline
